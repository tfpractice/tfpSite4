case "styling":
	
						 stylingCanvas.selectAll("p")
							 		.data(data)
							 		.enter()
							 			.append("p")
							 			.text(function(d) { 
							 				if (d.worktype == "styling") {
							 					return d.proficiency;
							 				} else {
							 					return ;
							 				}
						
		 								});
	
							var stylingGroup = stylingCanvas.append("g")
											.attr("transform", "translate (250, 250)");	 
	
							var stylingGraph = d3.layout.pie()
											.value(function(d) {
												if (d.worktype == "styling") {
												return d.proficiency;
											} else {
												return 0;
											}
	
											});		
	
							var stylingArcs = stylingGroup.selectAll(".arc")
											.data(stylingGraph(data))
									
											
											.enter()
												.append("g")
												.attr("class", "arc");
												
												
	
	
							stylingArcs.append("path")
								.call(tip)
								.attr("d", arc)
								.attr("fill", function(d){ return color(d.value); })
								.attr("id", function(d) { return d.data.name + "Arc";})
								.on('mouseover', tip.show)
								.on('mouseout', tip.hide);


										stylingArcs
												.on("mouseover", function(){
													var selectedArc = d3.select(this);
													selectedArc.append("text")
													.text(function(d) { 
														if (d.data.worktype == "styling") {
															return ((d.data.name) 
																); 
															} else {
															return ;
															}
														})
													.attr("fill","#00ff00" 
														//function(d){ return color(d.value); }
														)
													.attr("id", function(d){ return (d.data.name + "Text")}); 

														//});
	
												})
												.on("mouseout", function(){
													var selectedArc = d3.select(this);
													var currentText = selectedArc.select("text");
													var textObj = (currentText[0][0]);
													(textObj).remove();													
													return console.log(currentText[0]);

	
												});
							
	
	 				break;
	